{"org": "commercedataservice", "org_link": "https://github.com/commercedataservice", "repo": "Verbal", "repo_link": "https://github.com/commercedataservice/Verbal", "filename": "geocode_local.py", "explicit_dep": ["csv", "pprint", "json", "urllib.request", "urllib.error", "urllib.parse", "random", "time", "datetime", "pickle", "requests", "fiona", "pickle", "numpy", "retry", "shapely.geometry", "shapely.prepared", "multiprocessing", "osgeo", "tqdm", "rtree", "retry", "Point", "shape", "MultiPoint", "MultiPolygon", "Polygon", "mapping", "prep", "Process", "Pool", "ogr", null, null], "implicit_dep": ["__main__", "re", "enum", "sys", "types", "functools", "_functools", "abc", "_weakrefset", "_weakref", "collections", "_collections_abc", "operator", "builtins", "_operator", "keyword", "heapq", "_heapq", "doctest", "__future__", "argparse", "copy", "weakref", "itertools", "atexit", "gc", "copyreg", "os", "errno", "stat", "_stat", "posix", "posixpath", "genericpath", "pwd", "ntpath", "warnings", "_warnings", "linecache", "tokenize", "codecs", "_codecs", "encodings", "encodings.aliases", "_bootlocale", "_locale", "locale", "encodings.mbcs", "io", "_io", "token", "tracemalloc", "fnmatch", "struct", "_struct", "_compat_pickle", "_pickle", "_tracemalloc", "string", "_string", "subprocess", "signal", "_signal", "threading", "_thread", "traceback", "_collections", "_threading_local", "contextlib", "_posixsubprocess", "select", "selectors", "math", "dummy_threading", "_dummy_thread", "textwrap", "gettext", "difflib", "inspect", "ast", "_ast", "dis", "opcode", "_opcode", "collections.abc", "importlib", "_imp", "importlib._bootstrap", "importlib._bootstrap_external", "importlib.machinery", "pdb", "cmd", "readline", "bdb", "reprlib", "code", "codeop", "glob", "shlex", "pydoc", "importlib.util", "importlib.abc", "pkgutil", "zipimport", "marshal", "platform", "plistlib", "binascii", "_datetime", "_strptime", "calendar", "xml", "xml.parsers", "xml.parsers.expat", "pyexpat", "socket", "_socket", "urllib", "tempfile", "shutil", "zlib", "bz2", "_compression", "_bz2", "lzma", "_lzma", "grp", "tarfile", "gzip", "zipfile", "py_compile", "hashlib", "_hashlib", "logging", "_sha1", "_md5", "_sha256", "_sha512", "_blake2", "_sha3", "bisect", "_bisect", "_random", "tty", "termios", "pydoc_data", "pydoc_data.topics", "http", "http.server", "email", "email.parser", "email.feedparser", "email.errors", "email._policybase", "email.header", "email.quoprimime", "email.base64mime", "base64", "getopt", "email.charset", "email.encoders", "quopri", "email.utils", "email._parseaddr", "email.message", "uu", "optparse", "email._encoded_words", "email.iterators", "email.generator", "email.policy", "email.headerregistry", "email._header_value_parser", "email.contentmanager", "html", "html.entities", "http.client", "ssl", "ipaddress", "_ssl", "mimetypes", "socketserver", "webbrowser", "unittest", "unittest.result", "unittest.util", "unittest.case", "unittest.suite", "unittest.loader", "unittest.main", "unittest.runner", "unittest.signals", "sre_compile", "_sre", "sre_parse", "sre_constants", "_csv", "json.decoder", "json.scanner", "_json", "json.encoder", "urllib.response", "nturl2path", "_scproxy", "http.cookiejar", "ftplib", "netrc", "getpass", "requests.packages", "requests.packages.urllib3", "requests.packages.urllib3.connectionpool", "requests.packages.urllib3.exceptions", "requests.packages.urllib3.packages", "requests.packages.urllib3.packages.ssl_match_hostname", "backports", "requests.packages.urllib3.packages.ssl_match_hostname._implementation", "requests.packages.urllib3.packages.six", "requests.packages.urllib3.connection", "requests.packages.urllib3.util", "requests.packages.urllib3.util.connection", "requests.packages.urllib3.util.wait", "requests.packages.urllib3.util.selectors", "requests.packages.urllib3.util.request", "requests.packages.urllib3.util.response", "requests.packages.urllib3.util.ssl_", "hmac", "requests.packages.urllib3.util.timeout", "requests.packages.urllib3.util.retry", "requests.packages.urllib3.util.url", "requests.packages.urllib3._collections", "requests.packages.urllib3.packages.ordered_dict", "requests.packages.urllib3.request", "requests.packages.urllib3.filepost", "uuid", "ctypes", "_ctypes", "ctypes._endian", "ctypes.util", "ctypes.macholib", "ctypes.macholib.dyld", "ctypes.macholib.framework", "ctypes.macholib.dylib", "requests.packages.urllib3.fields", "requests.packages.urllib3.response", "Queue", "requests.packages.urllib3.poolmanager", "requests.packages.chardet", "requests.packages.chardet.compat", "requests.packages.chardet.universaldetector", "requests.packages.chardet.enums", "requests.packages.chardet.escprober", "requests.packages.chardet.charsetprober", "requests.packages.chardet.codingstatemachine", "requests.packages.chardet.escsm", "requests.packages.chardet.latin1prober", "requests.packages.chardet.mbcsgroupprober", "requests.packages.chardet.charsetgroupprober", "requests.packages.chardet.utf8prober", "requests.packages.chardet.mbcssm", "requests.packages.chardet.sjisprober", "requests.packages.chardet.mbcharsetprober", "requests.packages.chardet.chardistribution", "requests.packages.chardet.euctwfreq", "requests.packages.chardet.euckrfreq", "requests.packages.chardet.gb2312freq", "requests.packages.chardet.big5freq", "requests.packages.chardet.jisfreq", "requests.packages.chardet.jpcntx", "requests.packages.chardet.eucjpprober", "requests.packages.chardet.gb2312prober", "requests.packages.chardet.euckrprober", "requests.packages.chardet.cp949prober", "requests.packages.chardet.big5prober", "requests.packages.chardet.euctwprober", "requests.packages.chardet.sbcsgroupprober", "requests.packages.chardet.sbcharsetprober", "requests.packages.chardet.langcyrillicmodel", "requests.packages.chardet.langgreekmodel", "requests.packages.chardet.langbulgarianmodel", "requests.packages.chardet.langthaimodel", "requests.packages.chardet.langhebrewmodel", "requests.packages.chardet.hebrewprober", "requests.packages.chardet.langturkishmodel", "requests.packages.chardet.version", "chardet", "chardet.compat", "chardet.universaldetector", "chardet.charsetgroupprober", "chardet.enums", "chardet.charsetprober", "chardet.escprober", "chardet.codingstatemachine", "chardet.escsm", "chardet.latin1prober", "chardet.mbcsgroupprober", "chardet.utf8prober", "chardet.mbcssm", "chardet.sjisprober", "chardet.mbcharsetprober", "chardet.chardistribution", "chardet.euctwfreq", "chardet.euckrfreq", "chardet.gb2312freq", "chardet.big5freq", "chardet.jisfreq", "chardet.jpcntx", "chardet.eucjpprober", "chardet.gb2312prober", "chardet.euckrprober", "chardet.cp949prober", "chardet.big5prober", "chardet.euctwprober", "chardet.sbcsgroupprober", "chardet.sbcharsetprober", "chardet.langcyrillicmodel", "chardet.langgreekmodel", "chardet.langbulgarianmodel", "chardet.langthaimodel", "chardet.langhebrewmodel", "chardet.hebrewprober", "chardet.langturkishmodel", "chardet.version", "requests.packages.urllib3.contrib", "requests.packages.urllib3.contrib.pyopenssl", "OpenSSL", "OpenSSL.rand", "six", "OpenSSL._util", "cryptography", "cryptography.__about__", "cryptography.hazmat", "cryptography.hazmat.bindings", "cryptography.hazmat.bindings.openssl", "cryptography.hazmat.bindings.openssl.binding", "cryptography.exceptions", "cryptography.hazmat.bindings._openssl", "cryptography.hazmat.bindings.openssl._conditional", "OpenSSL.crypto", "cryptography.hazmat.primitives", "cryptography.hazmat.primitives.asymmetric", "cryptography.hazmat.primitives.asymmetric.dsa", "cryptography.utils", "packaging", "packaging.__about__", "packaging.version", "packaging._structures", "cryptography.hazmat.primitives.asymmetric.rsa", "fractions", "decimal", "_decimal", "_pydecimal", "numbers", "cryptography.hazmat.backends", "cryptography.hazmat.backends.multibackend", "cryptography.hazmat.backends.interfaces", "cryptography.hazmat.backends.openssl", "cryptography.hazmat.backends.openssl.backend", "cryptography.x509", "cryptography.x509.base", "cryptography.hazmat.primitives.asymmetric.ec", "cryptography.x509.extensions", "asn1crypto", "asn1crypto.version", "asn1crypto.keys", "asn1crypto._elliptic_curve", "asn1crypto._int", "asn1crypto.util", "asn1crypto._errors", "asn1crypto._iri", "encodings.idna", "stringprep", "unicodedata", "asn1crypto._types", "asn1crypto._ordereddict", "asn1crypto._inet", "asn1crypto._ffi", "asn1crypto._perf", "asn1crypto._perf._big_num_ctypes", "asn1crypto.algos", "asn1crypto.core", "asn1crypto._teletex_codec", "asn1crypto.parser", "cryptography.hazmat.primitives.constant_time", "cryptography.hazmat.bindings._constant_time", "cryptography.hazmat.primitives.serialization", "cryptography.x509.general_name", "idna", "idna.core", "idna.idnadata", "idna.intranges", "idna.uts46data", "cryptography.x509.name", "cryptography.x509.oid", "cryptography.hazmat.primitives.hashes", "cryptography.hazmat.backends.openssl.ciphers", "cryptography.hazmat.primitives.ciphers", "cryptography.hazmat.primitives.ciphers.base", "cffi", "cffi.api", "cffi.lock", "cffi.error", "cffi.model", "_cffi_backend", "cffi.cparser", "cffi.commontypes", "pycparser", "pycparser.c_parser", "pycparser.ply", "pycparser.ply.yacc", "pycparser.ply.lex", "pycparser.c_ast", "pycparser.c_lexer", "pycparser.plyparser", "pycparser.ast_transforms", "cffi.verifier", "cffi.ffiplatform", "distutils", "distutils.core", "distutils.debug", "distutils.errors", "distutils.dist", "distutils.fancy_getopt", "distutils.util", "distutils.dep_util", "distutils.spawn", "distutils.log", "distutils.sysconfig", "_osx_support", "distutils.text_file", "lib2to3", "lib2to3.refactor", "lib2to3.pgen2", "lib2to3.pgen2.driver", "lib2to3.pgen2.grammar", "lib2to3.pgen2.token", "lib2to3.pgen2.tokenize", "lib2to3.pgen2.parse", "lib2to3.pgen2.pgen", "lib2to3.fixer_util", "lib2to3.pytree", "lib2to3.pygram", "lib2to3.patcomp", "lib2to3.pgen2.literals", "lib2to3.btm_matcher", "lib2to3.btm_utils", "multiprocessing.context", "multiprocessing.process", "multiprocessing.util", "multiprocessing.reduction", "array", "multiprocessing.resource_sharer", "multiprocessing.connection", "_multiprocessing", "xmlrpc", "xmlrpc.client", "multiprocessing.managers", "queue", "multiprocessing.pool", "multiprocessing.dummy", "multiprocessing.dummy.connection", "multiprocessing.synchronize", "multiprocessing.semaphore_tracker", "multiprocessing.spawn", "runpy", "multiprocessing.heap", "mmap", "multiprocessing.queues", "multiprocessing.sharedctypes", "multiprocessing.forkserver", "multiprocessing.popen_fork", "multiprocessing.popen_spawn_posix", "multiprocessing.popen_forkserver", "multiprocessing.popen_spawn_win32", "distutils.dir_util", "distutils.file_util", "distutils.filelist", "configparser", "distutils.cmd", "distutils.archive_util", "distutils.command", "distutils.versionpredicate", "distutils.version", "distutils.config", "cgi", "distutils.extension", "imp", "cffi.vengine_gen", "cffi.vengine_cpy", "sysconfig", "cffi.recompiler", "cffi.cffi_opcode", "distutils.msvc9compiler", "distutils.ccompiler", "distutils.command.build_ext", "site", "_sitebuiltins", "rlcompleter", "concurrent", "concurrent.futures", "concurrent.futures._base", "concurrent.futures.process", "concurrent.futures.thread", "distutils._msvccompiler", "cryptography.hazmat.primitives.ciphers.modes", "cryptography.hazmat.backends.openssl.cmac", "cryptography.hazmat.primitives.interfaces", "cryptography.hazmat.backends.openssl.dh", "cryptography.hazmat.primitives.asymmetric.dh", "cryptography.hazmat.backends.openssl.dsa", "cryptography.hazmat.backends.openssl.utils", "cryptography.hazmat.primitives.asymmetric.utils", "cryptography.hazmat.backends.openssl.ec", "cryptography.hazmat.backends.openssl.encode_asn1", "cryptography.hazmat.backends.openssl.decode_asn1", "cryptography.hazmat.backends.openssl.hashes", "cryptography.hazmat.backends.openssl.hmac", "cryptography.hazmat.backends.openssl.rsa", "cryptography.hazmat.primitives.asymmetric.padding", "cryptography.hazmat.backends.openssl.x509", "cryptography.hazmat.primitives.ciphers.algorithms", "cryptography.hazmat.primitives.kdf", "cryptography.hazmat.primitives.kdf.scrypt", "cryptography.hazmat.backends.commoncrypto", "cryptography.hazmat.backends.commoncrypto.backend", "cryptography.hazmat.backends.commoncrypto.ciphers", "cryptography.hazmat.backends.commoncrypto.hashes", "cryptography.hazmat.backends.commoncrypto.hmac", "cryptography.hazmat.bindings.commoncrypto", "cryptography.hazmat.bindings.commoncrypto.binding", "cryptography.hazmat.bindings._commoncrypto", "OpenSSL.SSL", "OpenSSL.version", "requests.packages.urllib3.packages.backports", "requests.packages.urllib3.packages.backports.makefile", "requests.utils", "requests.certs", "requests._internal_utils", "requests.compat", "http.cookies", "requests.cookies", "requests.structures", "requests.exceptions", "requests.models", "requests.hooks", "requests.auth", "requests.status_codes", "requests.packages.idna", "requests.packages.idna.core", "requests.packages.idna.idnadata", "requests.packages.idna.intranges", "requests.packages.idna.uts46data", "requests.api", "requests.sessions", "requests.adapters", "requests.packages.urllib3.util.Timeout", "requests.packages.urllib3.contrib.socks", "numpy._globals", "numpy.__config__", "numpy.version", "numpy._import_tools", "numpy.compat", "numpy.compat._inspect", "numpy.compat.py3k", "pathlib", "numpy.add_newdocs", "numpy.lib", "numpy.lib.info", "numpy.lib.type_check", "numpy.core", "numpy.core.info", "numpy.core.multiarray", "numpy.core.umath", "numpy.core._internal", "numpy.core.numerictypes", "numpy.core.numeric", "numpy.core.arrayprint", "numpy.core.fromnumeric", "numpy.core._methods", "numpy.core.defchararray", "numpy.core.records", "numpy.core.memmap", "numpy.core.function_base", "numpy.core.machar", "numpy.core.getlimits", "numpy.core.shape_base", "numpy.core.einsumfunc", "numpy.testing", "numpy.testing.decorators", "numpy.testing.utils", "numpy.lib.utils", "nose", "nose.core", "nose.config", "nose.util", "nose.pyversion", "nose.tools", "nose.tools.nontrivial", "nose.tools.trivial", "nose.plugins", "nose.plugins.base", "nose.plugins.manager", "nose.failure", "nose.exc", "nose.plugins.skip", "nose.plugins.errorclass", "nose.result", "nose.plugins.deprecated", "nose.plugins.builtin", "nose.plugins.plugintest", "logging.config", "logging.handlers", "smtplib", "nose.importer", "nose.loader", "nose.case", "nose.selector", "nose.suite", "nose.proxy", "numpy.testing.noseclasses", "nose.plugins.doctests", "nose.ext", "nose.ext.dtcompat", "numpy.testing.nosetester", "scipy", "numpy.random", "numpy.random.info", "numpy.random.mtrand", "numpy.fft", "numpy.fft.info", "numpy.fft.fftpack", "numpy.fft.fftpack_lite", "numpy.fft.helper", "numpy.lib.scimath", "scipy.__config__", "scipy.version", "scipy._lib", "scipy._lib._version", "scipy._lib.six", "scipy._lib._ccallback", "scipy._lib._ccallback_c", "numpy.distutils", "numpy.distutils.__version__", "numpy.distutils.ccompiler", "numpy.distutils.log", "numpy.distutils.misc_util", "numpy.distutils.compat", "numpy.distutils.core", "numpy.distutils.extension", "numpy.distutils.numpy_distribution", "numpy.distutils.command", "numpy.distutils.command.config", "distutils.command.config", "numpy.distutils.exec_command", "numpy.distutils.mingw32ccompiler", "distutils.cygwinccompiler", "distutils.unixccompiler", "distutils.msvccompiler", "numpy.distutils.lib2def", "numpy.distutils.command.autodist", "numpy.distutils.fcompiler", "numpy.distutils.environment", "numpy.distutils.command.config_compiler", "numpy.distutils.command.build", "distutils.command.build", "numpy.distutils.command.build_py", "distutils.command.build_py", "numpy.distutils.command.build_ext", "numpy.distutils.system_info", "ConfigParser", "numpy.distutils.cpuinfo", "numpy.f2py", "numpy.f2py.f2py2e", "numpy.f2py.crackfortran", "fileinput", "numpy.f2py.__version__", "numpy.f2py.auxfuncs", "numpy.f2py.cfuncs", "numpy.f2py.capi_maps", "numpy.f2py.cb_rules", "numpy.f2py.rules", "numpy.f2py.common_rules", "numpy.f2py.func2subr", "numpy.f2py.use_rules", "numpy.f2py.f90mod_rules", "numpy.distutils.command.build_src", "numpy.distutils.from_template", "numpy.distutils.conv_template", "numpy.f2py.f2py_testing", "numpy.f2py.diagnose", "numpy.distutils.command.build_clib", "distutils.command.build_clib", "numpy.distutils.command.build_scripts", "distutils.command.build_scripts", "numpy.distutils.command.sdist", "distutils.command.sdist", "numpy.distutils.command.install_data", "distutils.command.install_data", "numpy.distutils.command.install_headers", "distutils.command.install_headers", "numpy.distutils.command.install", "distutils.command.install", "numpy.distutils.command.bdist_rpm", "distutils.command.bdist_rpm", "numpy.distutils.command.install_clib", "numpy.distutils.command.develop", "numpy.distutils.command.egg_info", "curses", "_curses", "curses.has_key", "numpy.distutils.npy_pkg_config", "numpy.distutils.unixccompiler", "numpy.distutils.info", "numpy.distutils.__config__", "numpy.lib.ufunclike", "numpy.lib.index_tricks", "numpy.lib.function_base", "numpy.lib.twodim_base", "numpy.dual", "numpy.linalg", "numpy.linalg.info", "numpy.linalg.linalg", "numpy.linalg.lapack_lite", "numpy.linalg._umath_linalg", "numpy.matrixlib", "numpy.matrixlib.defmatrix", "numpy.lib.stride_tricks", "numpy.lib.nanfunctions", "numpy.lib.shape_base", "numpy.lib.polynomial", "numpy.lib.arraysetops", "numpy.lib.npyio", "numpy.lib.format", "numpy.lib._datasource", "numpy.lib._iotools", "numpy.ma", "numpy.ma.core", "numpy.ma.extras", "numpy.ma.mrecords", "numpy.lib.financial", "numpy.lib.arrayterator", "numpy.lib.arraypad", "numpy.lib._version", "numpy._distributor_init", "numpy.core._dummy", "numpy.core.cversions", "numpy.core.generate_numpy_api", "numpy.core.multiarray_tests", "numpy.core.operand_flag_tests", "numpy.core.setup", "numpy.core.setup_common", "numpy.core.struct_ufunc_test", "numpy.core.test_rational", "numpy.core.umath_tests", "numpy.lib.recfunctions", "numpy.lib.setup", "numpy.lib.user_array", "numpy.polynomial", "numpy.polynomial.polynomial", "numpy.polynomial.polyutils", "numpy.polynomial._polybase", "numpy.polynomial.chebyshev", "numpy.polynomial.legendre", "numpy.polynomial.hermite", "numpy.polynomial.hermite_e", "numpy.polynomial.laguerre", "numpy.ctypeslib", "numpy.matrixlib.setup", "multiprocessing.Process", "multiprocessing.Pool"]}