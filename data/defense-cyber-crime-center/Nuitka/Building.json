{"org": "defense-cyber-crime-center", "org_link": "https://github.com/defense-cyber-crime-center", "repo": "Nuitka", "repo_link": "https://github.com/defense-cyber-crime-center/Nuitka", "filename": "Building.py", "explicit_dep": ["os", "sys", "logging", "nuitka", "nuitka.__past__", "nuitka.importing", "nuitka.importing.ImportCache", "nuitka.importing.PreloadedPackages", "nuitka.nodes.AssignNodes", "nuitka.nodes.AttributeNodes", "nuitka.nodes.BuiltinFormatNodes", "nuitka.nodes.BuiltinTypeNodes", "nuitka.nodes.ConditionalNodes", "nuitka.nodes.ConstantRefNodes", "nuitka.nodes.CoroutineNodes", "nuitka.nodes.ExceptionNodes", "nuitka.nodes.GeneratorNodes", "nuitka.nodes.LoopNodes", "nuitka.nodes.ModuleNodes", "nuitka.nodes.OperatorNodes", "nuitka.nodes.ReturnNodes", "nuitka.nodes.StatementNodes", "nuitka.nodes.StringConcatenationNodes", "nuitka.nodes.VariableRefNodes", "nuitka.Options", "nuitka.plugins.Plugins", "nuitka.PythonVersions", "nuitka.tree.ReformulationImportStatements", "nuitka.utils", "nuitka.utils.FileOperations", "", "Helpers", "ReformulationAssertStatements", "ReformulationAssignmentStatements", "ReformulationBooleanExpressions", "ReformulationCallExpressions", "ReformulationClasses", "ReformulationComparisonExpressions", "ReformulationContractionExpressions", "ReformulationDictionaryCreation", "ReformulationExecStatements", "ReformulationForLoopStatements", "ReformulationFunctionStatements", "ReformulationImportStatements", "ReformulationLambdaExpressions", "ReformulationNamespacePackages", "ReformulationPrintStatements", "ReformulationSequenceCreation", "ReformulationSubscriptExpressions", "ReformulationTryExceptStatements", "ReformulationTryFinallyStatements", "ReformulationWhileLoopStatements", "ReformulationWithStatements", "ReformulationYieldExpressions", "SourceReading", "VariableClosure", "info", "warning", "Options", "SourceCodeReferences", "int", "str", "Importing", "addImportedModule", "getPthImportedPackages", "ExpressionTargetVariableRef", "StatementAssignmentVariable", "ExpressionAttributeLookup", "ExpressionBuiltinAscii", "ExpressionBuiltinFormat", "ExpressionBuiltinStr", "ExpressionConditional", "StatementConditional", "ExpressionConstantEllipsisRef", "ExpressionConstantNoneRef", "makeConstantRefNode", "ExpressionAsyncWait", "StatementRaiseException", "StatementGeneratorReturn", "StatementLoopBreak", "StatementLoopContinue", "CompiledPythonModule", "CompiledPythonPackage", "ExpressionModuleFileAttributeRef", "PythonMainModule", "PythonShlibModule", "ExpressionOperationUnary", "makeBinaryOperationNode", "StatementReturn", "StatementExpressionOnly", "ExpressionStringConcatenation", "ExpressionVariableRef", "shallWarnUnusualCode", "Plugins", "python_version", "getFutureSpec", "MemoryUsage", "splitPath", "SyntaxErrors", "buildNode", "buildNodeList", "buildStatementsNode", "extractDocFromBody", "getBuildContext", "getKind", "makeAbsoluteImportNode", "makeModuleFrame", "makeStatementsSequence", "makeStatementsSequenceFromStatement", "mangleName", "mergeStatements", "parseSourceCodeToAst", "setBuildingDispatchers", "buildAssertNode", "buildAnnAssignNode", "buildAssignNode", "buildDeleteNode", "buildInplaceAssignNode", "buildBoolOpNode", "buildCallNode", "buildClassNode", "buildComparisonNode", "buildDictContractionNode", "buildGeneratorExpressionNode", "buildListContractionNode", "buildSetContractionNode", "buildDictionaryNode", "buildExecNode", "buildAsyncForLoopNode", "buildForLoopNode", "buildAsyncFunctionNode", "buildFunctionNode", "buildImportFromNode", "buildImportModulesNode", "checkFutureImportsOnlyAtStart", "popFutureSpec", "pushFutureSpec", "buildLambdaNode", "createNamespacePackage", "createPathAssignment", "buildPrintNode", "buildSequenceCreationNode", "buildSubscriptNode", "buildTryExceptionNode", "buildTryFinallyNode", "buildWhileLoopNode", "buildAsyncWithNode", "buildWithNode", "buildYieldFromNode", "buildYieldNode", "checkPythonVersionFromCode", "readSourceCodeFromFilename", "completeVariableClosures"], "implicit_dep": ["error"]}